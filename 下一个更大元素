下一个更大元素
给你两个 没有重复元素 的数组 nums1 和 nums2 ，其中nums1 是 nums2 的子集。

请你找出 nums1 中每个元素在 nums2 中的下一个比其大的值。

nums1 中数字 x 的下一个更大元素是指 x 在 nums2 中对应位置的右边的第一个比 x 大的元素。如果不存在，对应位置输出 -1 。

 

示例 1:

输入: nums1 = [4,1,2], nums2 = [1,3,4,2].
输出: [-1,3,-1]
解释:
    对于 num1 中的数字 4 ，你无法在第二个数组中找到下一个更大的数字，因此输出 -1 。
    对于 num1 中的数字 1 ，第二个数组中数字1右边的下一个较大数字是 3 。
    对于 num1 中的数字 2 ，第二个数组中没有下一个更大的数字，因此输出 -1 。
示例 2:

输入: nums1 = [2,4], nums2 = [1,2,3,4].
输出: [3,-1]
解释:
    对于 num1 中的数字 2 ，第二个数组中的下一个较大数字是 3 。
    对于 num1 中的数字 4 ，第二个数组中没有下一个更大的数字，因此输出 -1 
    
    
 //线性查找（js） 
 //方法一
    var nextGreaterElement = function(nums1, nums2) {
    for(let i = 0; i < nums1.length; i++){
        for(var j = nums2.indexOf(nums1[i])+1; j < nums2.length;j++){
            if(nums1[i] < nums2[j]){
                nums1[i] = nums2[j]
                break;
            }
        }
        if(j == nums2.length){
            nums1[i] = -1
        }
    }
    return nums1
};

//方法二（js）
var nextGreaterElement = function (nums1, nums2) {
    let res = [];
    // 遍历nums1，每次取一个出来
    for (let i = 0; i < nums1.length; i++) {
        // 查找nums1[i]在nums2中的位置
        let index = nums2.indexOf(nums1[i]);
        // 需要注意的是这个元素可能是nums2中的最后一个，如果是最后一个就无法满足nums2的遍历条件，因此直接加入-1
        if (index === nums2.length - 1) {
            res.push(-1);
        };
        // 从查找到的索引+1位开始查找，有记录更大元素，无则记录-1
        for (let j = index + 1; j < nums2.length; j++) {
            if (nums2[j] > nums1[i]) {
                res.push(nums2[j]);
                // 因为无重复元素，找到更大的就跳出循环
                break;
            } else if (j === nums2.length - 1) {
                res.push(-1)
            };
        };
    };
    return res;
};
    
    
    
    

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/next-greater-element-i
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
